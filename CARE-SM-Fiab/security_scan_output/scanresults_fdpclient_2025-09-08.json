{
  "SchemaVersion": 2,
  "CreatedAt": "2025-09-08T14:48:29.528137918+02:00",
  "ArtifactName": "fairdatasystems/fdpclient:2025-09-08",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.22.0"
    },
    "ImageID": "sha256:b990b0b0b901416f537a874ed1b8a737d347af094e06daf50796129ee08e5735",
    "DiffIDs": [
      "sha256:fd2758d7a50e2b78d275ee7d1c218489f2439084449d895fa17eede6c61ab2c4",
      "sha256:7b97c641cb43046a19147210c8310fb3e945511d823ff25d6a2a8cdeb306cf84",
      "sha256:bbbd2d1aea899787ba39ca46bff9ec748fe793c6041d2e5cc333695e06497513",
      "sha256:2aaacff968bce006201fc0e4294c4e6bb303760c1cf658329a8a73fa72f99f80",
      "sha256:36acb230000e7410fa30f2fcc36271edfd7b1ee55c61013057db3b6d94d433c4",
      "sha256:4f313ed230a0d606701fd96a6e0934f24739a31f1bad8d06d42aa0497c378752",
      "sha256:bd66bdd2f47fe79516d2b2af823745b8c31ee3de775f210e6a3f196248445284",
      "sha256:640e06e412a990ebeb0f48103529c16fff8f33a9595a268ad84bbe45adf28649",
      "sha256:ee8db550a92513ceade0f27107b0f51d8016aba9c2b2cc6e135dfe0cd934e560",
      "sha256:27a4b9600d1f0b2f6d8fa969ce4f803e227c2c6ee30c9ea0bfd0ad3c7cd3ffb3",
      "sha256:e806704b6709270423292bf0e16e7bbb9f872a189535f2d27ccb8bd150d366e2",
      "sha256:1acd5c38010e0589915c459cc3963082040fbf8b9cf4bcbd4ca8ab58990f6abd",
      "sha256:c1c57835beba8eaf8b519c41ac2dfa48f8513268f6a1b4f5268b375fe848ac16",
      "sha256:a7cbdadb2d2d61117a0085f2a7501af7de6e4c6bda8204326ba09d18cf1ef279",
      "sha256:7a76967b1f3e49a362dde0e825a4b35ec8044b3ad6cc28f3831f3ea350e50962",
      "sha256:62a77bb0ff9ad4f54c2996404b268dabaac8876c686e94eed8b1a9177e12a7ec",
      "sha256:6addef153979133c33ba534ec31345e87e56690ac264b4977c2d64bc5df4327f",
      "sha256:4489439a02ff633098007249ae422e564fe4f651359b1f4dc9aaf3c7e18cf33b",
      "sha256:6d078eb3239bca977271de60d3bbff53b4736650e562cdc40c8611c82b8c1b91",
      "sha256:eb3c23f5af00f96111e8639a74f0be7926b7d8ce743a7ca8230d29c73d83b5a1"
    ],
    "RepoTags": [
      "fairdatasystems/fdpclient:2025-09-08"
    ],
    "RepoDigests": [
      "fairdatasystems/fdpclient@sha256:6eefafd8d01383594b929262867a9b3ce3b7ee37a920c36b26df8d6b4af75e05"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "container": "426c1e8c46843b469206754fb53678be2bafb176a0ef0d900b9cca29fc096cf7",
      "created": "2025-09-08T12:48:05.98428225Z",
      "docker_version": "26.1.3",
      "history": [
        {
          "created": "2025-05-30T16:20:41Z",
          "created_by": "ADD alpine-minirootfs-3.22.0-x86_64.tar.gz / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-05-30T16:20:41Z",
          "created_by": "CMD [\"/bin/sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "ENV NGINX_VERSION=1.29.0",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "ENV PKG_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "ENV DYNPKG_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "RUN /bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils                 curl             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"400593da45fc0195a01138c0c23a06059da1c6a2e26959f2c4c95fbaf63436ff211665ef01392d2b775a0133d5b57680dabe51b840a55f82e89621e84cf651d1 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make base                 \u0026\u0026 apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del --no-network .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del --no-network .checksum-deps     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 apk add --no-cache gettext-envsubst     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "COPY docker-entrypoint.sh / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "EXPOSE map[80/tcp:{}]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "STOPSIGNAL SIGQUIT",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "ENV NJS_VERSION=0.9.0",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "ENV NJS_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-06-24T20:52:14Z",
          "created_by": "RUN /bin/sh -c set -x     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils                 curl             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"400593da45fc0195a01138c0c23a06059da1c6a2e26959f2c4c95fbaf63436ff211665ef01392d2b775a0133d5b57680dabe51b840a55f82e89621e84cf651d1 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make module-geoip module-image-filter module-njs module-xslt                 \u0026\u0026 apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del --no-network .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del --no-network .checksum-deps     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 apk add --no-cache curl ca-certificates # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:08:04.056803795Z",
          "created_by": "RUN /bin/sh -c apk add --no-cache libsass sassc \u0026\u0026 rm -f /tmp/* /etc/apk/cache/* # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.175612475Z",
          "created_by": "COPY /app/src/scss src/scss # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.200684806Z",
          "created_by": "COPY /app/src/components src/components # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.222707194Z",
          "created_by": "COPY /app/src/views src/views # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.244814978Z",
          "created_by": "COPY /app/node_modules/bootstrap/scss src/~bootstrap/scss # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.357891996Z",
          "created_by": "COPY /app/node_modules/bootstrap-vue/src src/~bootstrap-vue/src # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.802096569Z",
          "created_by": "COPY /app/node_modules/prismjs/themes src/~prismjs/themes # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.825728033Z",
          "created_by": "COPY /app/node_modules/vue-select/src/scss src/~vue-select/src/scss # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.847634863Z",
          "created_by": "COPY /app/node_modules/vue2-datepicker/scss src/~vue2-datepicker/scss # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.862543533Z",
          "created_by": "COPY nginx/default.conf /etc/nginx/conf.d/default.conf # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.872139577Z",
          "created_by": "COPY nginx/start.sh /start.sh # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.933817314Z",
          "created_by": "COPY /app/dist /usr/share/nginx/html # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-01T07:09:34.933817314Z",
          "created_by": "ARG fdp_app",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-07-01T07:09:34.933817314Z",
          "created_by": "ENV APP=",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-07-01T07:09:34.933817314Z",
          "created_by": "CMD [\"/start.sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-09-08T12:48:05.98428225Z",
          "created_by": "tail -f /dev/null",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:fd2758d7a50e2b78d275ee7d1c218489f2439084449d895fa17eede6c61ab2c4",
          "sha256:7b97c641cb43046a19147210c8310fb3e945511d823ff25d6a2a8cdeb306cf84",
          "sha256:bbbd2d1aea899787ba39ca46bff9ec748fe793c6041d2e5cc333695e06497513",
          "sha256:2aaacff968bce006201fc0e4294c4e6bb303760c1cf658329a8a73fa72f99f80",
          "sha256:36acb230000e7410fa30f2fcc36271edfd7b1ee55c61013057db3b6d94d433c4",
          "sha256:4f313ed230a0d606701fd96a6e0934f24739a31f1bad8d06d42aa0497c378752",
          "sha256:bd66bdd2f47fe79516d2b2af823745b8c31ee3de775f210e6a3f196248445284",
          "sha256:640e06e412a990ebeb0f48103529c16fff8f33a9595a268ad84bbe45adf28649",
          "sha256:ee8db550a92513ceade0f27107b0f51d8016aba9c2b2cc6e135dfe0cd934e560",
          "sha256:27a4b9600d1f0b2f6d8fa969ce4f803e227c2c6ee30c9ea0bfd0ad3c7cd3ffb3",
          "sha256:e806704b6709270423292bf0e16e7bbb9f872a189535f2d27ccb8bd150d366e2",
          "sha256:1acd5c38010e0589915c459cc3963082040fbf8b9cf4bcbd4ca8ab58990f6abd",
          "sha256:c1c57835beba8eaf8b519c41ac2dfa48f8513268f6a1b4f5268b375fe848ac16",
          "sha256:a7cbdadb2d2d61117a0085f2a7501af7de6e4c6bda8204326ba09d18cf1ef279",
          "sha256:7a76967b1f3e49a362dde0e825a4b35ec8044b3ad6cc28f3831f3ea350e50962",
          "sha256:62a77bb0ff9ad4f54c2996404b268dabaac8876c686e94eed8b1a9177e12a7ec",
          "sha256:6addef153979133c33ba534ec31345e87e56690ac264b4977c2d64bc5df4327f",
          "sha256:4489439a02ff633098007249ae422e564fe4f651359b1f4dc9aaf3c7e18cf33b",
          "sha256:6d078eb3239bca977271de60d3bbff53b4736650e562cdc40c8611c82b8c1b91",
          "sha256:eb3c23f5af00f96111e8639a74f0be7926b7d8ce743a7ca8230d29c73d83b5a1"
        ]
      },
      "config": {
        "Cmd": [
          "tail",
          "-f",
          "/dev/null"
        ],
        "Entrypoint": [
          "/docker-entrypoint.sh"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "NGINX_VERSION=1.29.0",
          "PKG_RELEASE=1",
          "DYNPKG_RELEASE=1",
          "NJS_VERSION=0.9.0",
          "NJS_RELEASE=1",
          "APP="
        ],
        "Hostname": "426c1e8c4684",
        "Image": "fairdata/fairdatapoint-client:1.17.1",
        "Labels": {
          "maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
        },
        "WorkingDir": "/",
        "ExposedPorts": {
          "80/tcp": {}
        },
        "StopSignal": "SIGQUIT"
      }
    }
  },
  "Results": [
    {
      "Target": "fairdatasystems/fdpclient:2025-09-08 (alpine 3.22.0)",
      "Class": "os-pkgs",
      "Type": "alpine"
    }
  ]
}
